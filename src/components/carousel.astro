---
interface Image {
  urlLink: string;
}

interface Props {
  imagesCarousel: Array<Image>;
}

const { imagesCarousel } = Astro.props;
---
<div class="slider">
  <div class="slider-container">
    {imagesCarousel.map((image) => (
        <div class="slider-slide">
          <img src={image.urlLink} />)
        </div>
      ))}
  </div>
</div>

<style>
  .slider {
    position: relative;
    width: 100%;
    height: 800px;
    overflow: hidden;
  }

  .slider-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
  }

  .slider-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease;
  }

  .slider-slide.active {
    opacity: 1;
  }

  .slider-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media screen and (max-width: 768px) {
    .slider {
      height: 300px;
    }
  }
</style>

<script>
  const slides = document.querySelectorAll(".slider-slide");
  let currentSlide = 0;
  const slideInterval = 10000; 
  function nextSlide() {
    slides[currentSlide].classList.remove("active");
    currentSlide = (currentSlide + 1) % slides.length;
    slides[currentSlide].classList.add("active");
  }

  setInterval(nextSlide, slideInterval);
  slides[currentSlide].classList.add("active");
</script>
